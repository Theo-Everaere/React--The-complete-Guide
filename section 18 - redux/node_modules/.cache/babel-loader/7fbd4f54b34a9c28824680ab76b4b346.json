{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst initialIsAuthenticatedState = {\n  isAuthenticated: false\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialIsAuthenticatedState,\n  reducers: {\n    login() {},\n\n    logout() {}\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/Users/theo-/Desktop/section 18 - redux/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","initialIsAuthenticatedState","isAuthenticated","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","authSlice","login","logout","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AACA,MAAMC,2BAA2B,GAAG;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAApC;AAEA,MAAMC,YAAY,GAAGP,WAAW,CAAC;AAC7BQ,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAEP,mBAFe;AAG7BQ,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACT,OAAN;AACH,KAHK;;AAINU,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACT,OAAN;AACH,KANK;;AAONW,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACT,OAAN,GAAgBS,KAAK,CAACT,OAAN,GAAgBY,MAAM,CAACC,OAAvC;AACH,KATK;;AAUNC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACR,WAAN,GAAoB,CAACQ,KAAK,CAACR,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC;AAmBA,MAAMc,SAAS,GAAGlB,WAAW,CAAC;AAC1BQ,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAEJ,2BAFY;AAG1BK,EAAAA,QAAQ,EAAE;AACNS,IAAAA,KAAK,GAAG,CAAG,CADL;;AAENC,IAAAA,MAAM,GAAG,CAAG;;AAFN;AAHgB,CAAD,CAA7B;AAUA,MAAMC,KAAK,GAAGpB,cAAc,CAAC;AACzBqB,EAAAA,OAAO,EAAEf,YAAY,CAACe;AADG,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGhB,YAAY,CAACiB,OAApC;AACP,eAAeH,KAAf","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit'\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true }\r\nconst initialIsAuthenticatedState = { isAuthenticated: false }\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter\r\n        }\r\n    }\r\n});\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: initialIsAuthenticatedState,\r\n    reducers: {\r\n        login() { },\r\n        logout() { }\r\n    }\r\n})\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: counterSlice.reducer\r\n})\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport default store;"]},"metadata":{},"sourceType":"module"}