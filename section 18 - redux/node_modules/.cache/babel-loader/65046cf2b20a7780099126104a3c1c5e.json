{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst slice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggle() {}\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["C:/Users/theo-/Desktop/section 18 - redux/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","slice","name","reducers","increment","state","decrement","increase","action","amount","toggle","counterReducer","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEA,MAAMC,KAAK,GAAGJ,WAAW,CAAC;AACtBK,EAAAA,IAAI,EAAE,SADgB;AAEtBJ,EAAAA,YAAY,EAAEA,YAFQ;AAGtBK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KAHK;;AAINO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KANK;;AAONQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,MAAvC;AACH,KATK;;AAUNC,IAAAA,MAAM,GAAG,CAAG;;AAVN;AAHY,CAAD,CAAzB;;AAiBA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCN,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXU,MAAW;;AAErD,MAAIA,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHb,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAAEK,KAAK,CAACL;AAFhB,KAAP;AAIH;;AAED,MAAIQ,MAAM,CAACI,IAAP,KAAgB,UAApB,EAAgC;AAC5B,WAAO;AACHb,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,MAD7B;AAEHT,MAAAA,WAAW,EAAEK,KAAK,CAACL;AAFhB,KAAP;AAIH;;AAED,MAAIQ,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHb,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAAEK,KAAK,CAACL;AAFhB,KAAP;AAIH;;AAED,MAAIQ,MAAM,CAACI,IAAP,KAAgB,QAApB,EAA8B;AAC1B,WAAO;AACHb,MAAAA,OAAO,EAAEM,KAAK,CAACN,OADZ;AAEHC,MAAAA,WAAW,EAAE,CAACK,KAAK,CAACL;AAFjB,KAAP;AAIH;;AAED,SAAOK,KAAP;AACH,CA/BD;;AAiCA,MAAMQ,KAAK,GAAGjB,WAAW,CAACe,cAAD,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import { createStore } from 'redux'\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = { counter: 0, showCounter: true }\r\n\r\nconst slice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.amount;\r\n        },\r\n        toggle() { }\r\n    }\r\n})\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n\r\n    if (action.type === 'increment') {\r\n        return {\r\n            counter: state.counter + 1,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'increase') {\r\n        return {\r\n            counter: state.counter + action.amount,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === \"toggle\") {\r\n        return {\r\n            counter: state.counter,\r\n            showCounter: !state.showCounter\r\n        }\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nconst store = createStore(counterReducer)\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}