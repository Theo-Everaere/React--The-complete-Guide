{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theo-\\\\Desktop\\\\section 19 - advanded redux\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { uiActions } from \"./store/ui-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const cartIsVisible = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n\n    const sendCartData = async () => {\n      const reponse = await fetch(\"https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!reponse.ok) {\n        throw new Error('Sending cart data failed!');\n      }\n\n      const responseData = await reponse.json();\n    };\n\n    dispatch(uiActions.showNotification({\n      status: \"success\",\n      title: \"Success...\",\n      message: \"Cart data was successfully sent!\"\n    }));\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error...\",\n        message: \"Sending cart data failed!\"\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cartIsVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nhiEcxiWlPvqN2T6qGo1gBfMHc8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/theo-/Desktop/section 19 - advanded redux/src/App.js"],"names":["useEffect","Fragment","useSelector","useDispatch","Cart","Layout","Products","Notification","uiActions","isInitial","App","dispatch","cartIsVisible","state","ui","cart","notification","showNotification","status","title","message","sendCartData","reponse","fetch","method","body","JSON","stringify","ok","Error","responseData","json","catch","error"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,aAAa,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASF,aAAnB,CAAjC;AACA,QAAMG,IAAI,GAAGb,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACE,IAAhB,CAAxB;AACA,QAAMC,YAAY,GAAGd,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASE,YAAnB,CAAhC;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACH,SAAS,CAACS,gBAAV,CAA2B;AAClCC,MAAAA,MAAM,EAAE,SAD0B;AAElCC,MAAAA,KAAK,EAAE,YAF2B;AAGlCC,MAAAA,OAAO,EAAE;AAHyB,KAA3B,CAAD,CAAR;;AAKA,UAAMC,YAAY,GAAG,YAAY;AAC/B,YAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,mFAAD,EAAsF;AAC/GC,QAAAA,MAAM,EAAE,KADuG;AAChGC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AAD0F,OAAtF,CAA3B;;AAGA,UAAI,CAACO,OAAO,CAACM,EAAb,EAAiB;AACf,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACD,YAAMC,YAAY,GAAG,MAAMR,OAAO,CAACS,IAAR,EAA3B;AACD,KARD;;AAUApB,IAAAA,QAAQ,CAACH,SAAS,CAACS,gBAAV,CAA2B;AAClCC,MAAAA,MAAM,EAAE,SAD0B;AAElCC,MAAAA,KAAK,EAAE,YAF2B;AAGlCC,MAAAA,OAAO,EAAE;AAHyB,KAA3B,CAAD,CAAR;;AAMA,QAAIX,SAAJ,EAAe;AACbA,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAEDY,IAAAA,YAAY,GAAGW,KAAf,CAAqBC,KAAK,IAAI;AAC5BtB,MAAAA,QAAQ,CAACH,SAAS,CAACS,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAE,OAD0B;AAElCC,QAAAA,KAAK,EAAE,UAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAKD,KAND;AAOD,GAlCQ,EAkCN,CAACL,IAAD,EAAOJ,QAAP,CAlCM,CAAT;AAoCA,sBACE,QAAC,QAAD;AAAA,eACGK,YAAY,iBAAI,QAAC,YAAD;AACf,MAAA,MAAM,EAAEA,YAAY,CAACE,MADN;AAEf,MAAA,KAAK,EAAEF,YAAY,CAACG,KAFL;AAGf,MAAA,OAAO,EAAEH,YAAY,CAACI;AAHP;AAAA;AAAA;AAAA;AAAA,YADnB,eAME,QAAC,MAAD;AAAA,iBACGR,aAAa,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADpB,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAvDQF,G;UACUP,W,EACKD,W,EACTA,W,EACQA,W;;;KAJdQ,G;AAyDT,eAAeA,GAAf","sourcesContent":["import { useEffect, Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { uiActions } from \"./store/ui-slice\"\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch()\n  const cartIsVisible = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }))\n    const sendCartData = async () => {\n      const reponse = await fetch(\"https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app/cart.json\", {\n        method: \"PUT\", body: JSON.stringify(cart)\n      })\n      if (!reponse.ok) {\n        throw new Error('Sending cart data failed!')\n      }\n      const responseData = await reponse.json()\n    }\n\n    dispatch(uiActions.showNotification({\n      status: \"success\",\n      title: \"Success...\",\n      message: \"Cart data was successfully sent!\"\n    }))\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error...\",\n        message: \"Sending cart data failed!\"\n      }))\n    })\n  }, [cart, dispatch])\n\n  return (\n    <Fragment>\n      {notification && <Notification\n        status={notification.status}\n        title={notification.title}\n        message={notification.message}\n      />}\n      <Layout>\n        {cartIsVisible && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}