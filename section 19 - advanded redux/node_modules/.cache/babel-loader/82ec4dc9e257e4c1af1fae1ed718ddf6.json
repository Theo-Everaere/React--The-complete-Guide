{"ast":null,"code":"import { cartActions } from \"./cart-slice\";\nimport { uiActions } from \"./ui-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app//cart.json');\n\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Could not fetch cart data!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch('https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app//cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["D:/All Formations/Formations Udemy/React Academind/section 19 - advanded redux/src/store/cart-actions.js"],"names":["cartActions","uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"mappings":"AAAA,SAASA,WAAT,QAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oFAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,aAAOD,IAAP;AACH,KATD;;AAWA,QAAI;AACA,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;AACAD,MAAAA,QAAQ,CAACH,WAAW,CAACY,WAAZ,CAAwB;AAC7BC,QAAAA,KAAK,EAAEF,QAAQ,CAACE,KAAT,IAAkB,EADI;AAE7BC,QAAAA,aAAa,EAAEH,QAAQ,CAACG;AAFK,OAAxB,CAAD,CAAR;AAIH,KAND,CAME,OAAOC,KAAP,EAAc;AACZZ,MAAAA,QAAQ,CACJF,SAAS,CAACe,gBAAV,CAA2B;AACvBC,QAAAA,MAAM,EAAE,OADe;AAEvBC,QAAAA,KAAK,EAAE,QAFgB;AAGvBC,QAAAA,OAAO,EAAE;AAHc,OAA3B,CADI,CAAR;AAOH;AACJ,GA3BD;AA4BH,CA7BM;AA+BP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAClC,SAAO,MAAOlB,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CACJF,SAAS,CAACe,gBAAV,CAA2B;AACvBC,MAAAA,MAAM,EAAE,SADe;AAEvBC,MAAAA,KAAK,EAAE,YAFgB;AAGvBC,MAAAA,OAAO,EAAE;AAHc,KAA3B,CADI,CAAR;;AAQA,UAAMG,WAAW,GAAG,YAAY;AAC5B,YAAMjB,QAAQ,GAAG,MAAMC,KAAK,CACxB,oFADwB,EAExB;AACIiB,QAAAA,MAAM,EAAE,KADZ;AAEIC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBb,UAAAA,KAAK,EAAEQ,IAAI,CAACR,KADK;AAEjBC,UAAAA,aAAa,EAAEO,IAAI,CAACP;AAFH,SAAf;AAFV,OAFwB,CAA5B;;AAWA,UAAI,CAACT,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACH;AACJ,KAfD;;AAiBA,QAAI;AACA,YAAMc,WAAW,EAAjB;AAEAnB,MAAAA,QAAQ,CACJF,SAAS,CAACe,gBAAV,CAA2B;AACvBC,QAAAA,MAAM,EAAE,SADe;AAEvBC,QAAAA,KAAK,EAAE,UAFgB;AAGvBC,QAAAA,OAAO,EAAE;AAHc,OAA3B,CADI,CAAR;AAOH,KAVD,CAUE,OAAOJ,KAAP,EAAc;AACZZ,MAAAA,QAAQ,CACJF,SAAS,CAACe,gBAAV,CAA2B;AACvBC,QAAAA,MAAM,EAAE,OADe;AAEvBC,QAAAA,KAAK,EAAE,QAFgB;AAGvBC,QAAAA,OAAO,EAAE;AAHc,OAA3B,CADI,CAAR;AAOH;AACJ,GA7CD;AA8CH,CA/CM","sourcesContent":["import { cartActions } from \"./cart-slice\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n    return async dispatch => {\r\n        const fetchData = async () => {\r\n            const response = await fetch('https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app//cart.json');\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Could not fetch cart data!')\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            const cartData = await fetchData();\r\n            dispatch(cartActions.replaceCart({\r\n                items: cartData.items || [],\r\n                totalQuantity: cartData.totalQuantity\r\n            }))\r\n        } catch (error) {\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                    status: 'error',\r\n                    title: 'Error!',\r\n                    message: 'Could not fetch cart data!',\r\n                })\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(\r\n            uiActions.showNotification({\r\n                status: 'pending',\r\n                title: 'Sending...',\r\n                message: 'Sending cart data!',\r\n            })\r\n        );\r\n\r\n        const sendRequest = async () => {\r\n            const response = await fetch(\r\n                'https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app//cart.json',\r\n                {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify({\r\n                        items: cart.items,\r\n                        totalQuantity: cart.totalQuantity\r\n                    }),\r\n                }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Sending cart data failed.');\r\n            }\r\n        };\r\n\r\n        try {\r\n            await sendRequest();\r\n\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                    status: 'success',\r\n                    title: 'Success!',\r\n                    message: 'Sent cart data successfully!',\r\n                })\r\n            );\r\n        } catch (error) {\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                    status: 'error',\r\n                    title: 'Error!',\r\n                    message: 'Sending cart data failed!',\r\n                })\r\n            );\r\n        }\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}