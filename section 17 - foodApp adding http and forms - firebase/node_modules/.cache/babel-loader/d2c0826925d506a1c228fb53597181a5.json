{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theo-\\\\Desktop\\\\section\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchMealsHandler = async () => {\n      const mealsUrl = 'https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app/meals.json'; // try {\n\n      const response = await fetch(mealsUrl);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong.');\n      }\n\n      const data = await response.json();\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          title: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false); // } catch (err) {\n      //   setError(err.message);\n      // }\n    };\n\n    fetchMealsHandler();\n  }, []);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: classes.mealsLoading,\n    children: \"Found no meals.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 17\n  }, this);\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (meals.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MealItem, {\n      meals: meals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, this);\n  } // if (error) {\n  //   content = <p>{error}</p>;\n  // }\n\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"Opmz/k+5zTZAoo/mes+3X6ZqQsM=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/theo-/Desktop/section/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","fetchMealsHandler","mealsUrl","response","fetch","ok","Error","data","json","loadedMeals","key","push","id","title","name","description","price","content","mealsLoading","length","mealsList","map","meal"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,iBAAiB,GAAG,YAAY;AAEpC,YAAMC,QAAQ,GAAG,oFAAjB,CAFoC,CAIpC;;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA5B;;AAEA,UAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACtBE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,KAAK,EAAEN,IAAI,CAACG,GAAD,CAAJ,CAAUI,IAFF;AAGfC,UAAAA,WAAW,EAAER,IAAI,CAACG,GAAD,CAAJ,CAAUK,WAHR;AAIfC,UAAAA,KAAK,EAAET,IAAI,CAACG,GAAD,CAAJ,CAAUM;AAJF,SAAjB;AAMD;;AACDlB,MAAAA,QAAQ,CAACW,WAAD,CAAR;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ,CAxBoC,CA2BpC;AACA;AACA;AACD,KA9BD;;AA+BAC,IAAAA,iBAAiB;AAClB,GAjCQ,EAiCN,EAjCM,CAAT;;AAmCA,MAAIgB,OAAO,gBAAG;AAAG,IAAA,SAAS,EAAExB,OAAO,CAACyB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAInB,SAAJ,EAAe;AACbkB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIpB,KAAK,CAACsB,MAAN,GAAe,CAAnB,EAAsB;AACpBF,IAAAA,OAAO,gBAAG,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEpB;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GA/C0B,CAiD3B;AACA;AACA;;;AAEA,QAAMuB,SAAS,GAAGvB,KAAK,CAACwB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACV,EAFX;AAGE,IAAA,IAAI,EAAEU,IAAI,CAACR,IAHb;AAIE,IAAA,WAAW,EAAEQ,IAAI,CAACP,WAJpB;AAKE,IAAA,KAAK,EAAEO,IAAI,CAACN;AALd,KACOM,IAAI,CAACV,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEnB,OAAO,CAACI,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKuB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtED;;GAAMxB,c;;KAAAA,c;AAwEN,eAAeA,cAAf","sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMealsHandler = async () => {\n\n      const mealsUrl = 'https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app/meals.json'\n\n      // try {\n      const response = await fetch(mealsUrl)\n\n      if (!response.ok) {\n        throw new Error('Something went wrong.')\n      }\n\n      const data = await response.json()\n\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          title: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        })\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false)\n\n\n      // } catch (err) {\n      //   setError(err.message);\n      // }\n    }\n    fetchMealsHandler()\n  }, [])\n\n  let content = <p className={classes.mealsLoading}>Found no meals.</p>;\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  if (meals.length > 0) {\n    content = <MealItem meals={meals} />;\n  }\n\n  // if (error) {\n  //   content = <p>{error}</p>;\n  // }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}