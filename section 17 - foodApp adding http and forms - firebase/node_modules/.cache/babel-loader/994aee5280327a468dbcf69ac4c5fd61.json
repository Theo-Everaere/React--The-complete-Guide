{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theo-\\\\Desktop\\\\section\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card'; // import MealItem from './MealItem/MealItem';\n\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMealsHandler = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong.');\n      }\n\n      const data = await response.json();\n      const loadedMeals = [];\n\n      for (const key in data) {\n        console.log(data);\n        loadedMeals.push({\n          id: key,\n          title: data[key].name\n        });\n        console.log(\"LoadedMeals :\" + loadedMeals[key].name);\n      }\n\n      setMeals(loadedMeals);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchMealsHandler();\n  }, []); // const mealsList = data.map((meal) => (\n  //   <MealItem\n  //     key={meal.id}\n  //     id={meal.id}\n  //     name={meal.name}\n  //     description={meal.description}\n  //     price={meal.price}\n  //   />\n  // ));\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"Iiz9r13wHP3oUKY8Pc8nCUik7ZA=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/theo-/Desktop/section/src/components/Meals/AvailableMeals.js"],"names":["Card","classes","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMealsHandler","response","fetch","ok","Error","data","json","loadedMeals","key","console","log","push","id","title","name","err","message"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;;AAGA,QAAMQ,iBAAiB,GAAG,YAAY;AACpCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,oFAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACtBI,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAE,QAAAA,WAAW,CAACI,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEJ,GADW;AAEfK,UAAAA,KAAK,EAAER,IAAI,CAACG,GAAD,CAAJ,CAAUM;AAFF,SAAjB;AAIAL,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBH,WAAW,CAACC,GAAD,CAAX,CAAiBM,IAA/C;AACD;;AAEDnB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AAED,KAtBD,CAsBE,OAAOQ,GAAP,EAAY;AACZhB,MAAAA,QAAQ,CAACgB,GAAG,CAACC,OAAL,CAAR;AACD;;AACDnB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA7BD;;AA+BAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT,CArC2B,CA0C3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAS,IAAA,SAAS,EAAEV,OAAO,CAACI,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3DD;;GAAMD,c;;KAAAA,c;AA6DN,eAAeA,cAAf","sourcesContent":["import Card from '../UI/Card';\n// import MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n  const fetchMealsHandler = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app/meals.json')\n\n      if (!response.ok) {\n        throw new Error('Something went wrong.')\n      }\n\n      const data = await response.json()\n\n      const loadedMeals = [];\n\n      for (const key in data) {\n        console.log(data);\n        loadedMeals.push({\n          id: key,\n          title: data[key].name\n        })\n        console.log(\"LoadedMeals :\" + loadedMeals[key].name);\n      }\n\n      setMeals(loadedMeals);\n\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false)\n  }\n\n  useEffect(() => {\n    fetchMealsHandler()\n  }, [])\n\n\n  // const mealsList = data.map((meal) => (\n  //   <MealItem\n  //     key={meal.id}\n  //     id={meal.id}\n  //     name={meal.name}\n  //     description={meal.description}\n  //     price={meal.price}\n  //   />\n  // ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        {/* <ul>{mealsList}</ul> */}\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}