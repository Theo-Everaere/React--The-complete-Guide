{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theo-\\\\Desktop\\\\section\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMealsHandler = async () => {\n      setIsLoading(true);\n      setError(null);\n      const mealsUrl = 'https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app/meals.json';\n\n      try {\n        const response = await fetch(mealsUrl);\n\n        if (!response.ok) {\n          throw new Error('Something went wrong.');\n        }\n\n        const data = await response.json();\n        const loadedMeals = [];\n\n        for (const key in data) {\n          loadedMeals.push({\n            id: key,\n            title: data[key].name,\n            description: data[key].description,\n            price: data[key].price\n          });\n        }\n\n        setMeals(loadedMeals);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchMealsHandler();\n  }, []);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: classes.mealsLoading,\n    children: \"Found no meals.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 17\n  }, this);\n\n  if (meals.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MealItem, {\n      meals: meals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"Iiz9r13wHP3oUKY8Pc8nCUik7ZA=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/theo-/Desktop/section/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMealsHandler","mealsUrl","response","fetch","ok","Error","data","json","loadedMeals","key","push","id","title","name","description","price","err","message","content","mealsLoading","length","mealsList","map","meal"],"mappings":"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","sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMealsHandler = async () => {\n      setIsLoading(true);\n\n      setError(null);\n\n      const mealsUrl = 'https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app/meals.json'\n\n      try {\n        const response = await fetch(mealsUrl)\n\n        if (!response.ok) {\n          throw new Error('Something went wrong.')\n        }\n\n        const data = await response.json()\n\n        const loadedMeals = [];\n\n        for (const key in data) {\n          loadedMeals.push({\n            id: key,\n            title: data[key].name,\n            description: data[key].description,\n            price: data[key].price\n          })\n        }\n        setMeals(loadedMeals);\n\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false)\n    }\n    fetchMealsHandler()\n  }, [])\n\n  let content = <p className={classes.mealsLoading}>Found no meals.</p>;\n\n  if (meals.length > 0) {\n    content = <MealItem meals={meals} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}