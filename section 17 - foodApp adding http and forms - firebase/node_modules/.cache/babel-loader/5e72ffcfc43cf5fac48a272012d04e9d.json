{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theo-\\\\Desktop\\\\section\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Checkout.module.css';\nimport { useRef, useState, useContext } from 'react';\nimport CartContext from '../../store/cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode\n    });\n    cartCtx.clearCart();\n  };\n\n  const nameControlClasses = `${classes.control}\n     ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control}\n     ${formInputsValidity.street ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control}\n     ${formInputsValidity.postalCode ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control}\n     ${formInputsValidity.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code (5 characters long).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"snAebv/p84EDLkN3Toa7mzZ8Adk=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/theo-/Desktop/section/src/components/Cart/Checkout.js"],"names":["classes","useRef","useState","useContext","CartContext","isEmpty","value","trim","isFiveChars","length","Checkout","props","cartCtx","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","clearCart","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import classes from './Checkout.module.css';\r\nimport { useRef, useState, useContext } from 'react';\r\nimport CartContext from '../../store/cart-context';\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isFiveChars = value => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n\r\n    const cartCtx = useContext(CartContext)\r\n\r\n    const [formInputsValidity, setFormInputsValidity] = useState({\r\n        name: true,\r\n        street: true,\r\n        city: true,\r\n        postalCode: true\r\n    })\r\n\r\n    const nameInputRef = useRef()\r\n    const streetInputRef = useRef()\r\n    const postalCodeInputRef = useRef()\r\n    const cityInputRef = useRef()\r\n\r\n    const confirmHandler = (event) => {\r\n        event.preventDefault();\r\n        const enteredName = nameInputRef.current.value;\r\n        const enteredStreet = streetInputRef.current.value;\r\n        const enteredPostalCode = postalCodeInputRef.current.value;\r\n        const enteredCity = cityInputRef.current.value;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName)\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet)\r\n        const enteredCityIsValid = !isEmpty(enteredCity)\r\n        const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode)\r\n\r\n        setFormInputsValidity({\r\n            name: enteredNameIsValid,\r\n            street: enteredStreetIsValid,\r\n            city: enteredCityIsValid,\r\n            postalCode: enteredPostalCodeIsValid\r\n        })\r\n\r\n        const formIsValid =\r\n            enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid\r\n\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n\r\n        props.onConfirm({\r\n            name: enteredName,\r\n            street: enteredStreet,\r\n            city: enteredCity,\r\n            postalCode: enteredPostalCode\r\n        })\r\n\r\n        cartCtx.clearCart()\r\n    };\r\n\r\n    const nameControlClasses = `${classes.control}\r\n     ${formInputsValidity.name ? '' : classes.invalid}`\r\n\r\n    const streetControlClasses = `${classes.control}\r\n     ${formInputsValidity.street ? '' : classes.invalid}`\r\n\r\n    const postalCodeControlClasses = `${classes.control}\r\n     ${formInputsValidity.postalCode ? '' : classes.invalid}`\r\n\r\n    const cityControlClasses = `${classes.control}\r\n     ${formInputsValidity.city ? '' : classes.invalid}`\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n            <div className={nameControlClasses}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input\r\n                    type='text'\r\n                    id='name'\r\n                    ref={nameInputRef}\r\n                />\r\n                {!formInputsValidity.name && <p>Please enter a valid name.</p>}\r\n            </div>\r\n            <div className={streetControlClasses}>\r\n                <label htmlFor='street'>Street</label>\r\n                <input\r\n                    type='text'\r\n                    id='street'\r\n                    ref={streetInputRef}\r\n                />\r\n                {!formInputsValidity.street && <p>Please enter a valid street.</p>}\r\n\r\n            </div>\r\n            <div className={postalCodeControlClasses}>\r\n                <label htmlFor='postal'>Postal Code</label>\r\n                <input\r\n                    type='text'\r\n                    id='postal'\r\n                    ref={postalCodeInputRef}\r\n                />\r\n                {!formInputsValidity.postalCode && <p>Please enter a valid postal code (5 characters long).</p>}\r\n\r\n            </div>\r\n            <div className={cityControlClasses}>\r\n                <label htmlFor='city'>City</label>\r\n                <input\r\n                    type='text'\r\n                    id='city'\r\n                    ref={cityInputRef}\r\n                />\r\n                {!formInputsValidity.city && <p>Please enter a valid city.</p>}\r\n\r\n            </div>\r\n            <div className={classes.actions}>\r\n                <button type='button' onClick={props.onCancel}>\r\n                    Cancel\r\n                </button>\r\n                <button className={classes.submit}>Confirm</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}