{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theo-\\\\Desktop\\\\section\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMealsHandler = async () => {\n    setIsLoading(true);\n    setError(null);\n    const mealsUrl = 'https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app/meals.json';\n\n    try {\n      const response = await fetch(mealsUrl);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong.');\n      }\n\n      const data = await response.json();\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: data[key].id,\n          title: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchMealsHandler();\n  }, []);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 17\n  }, this);\n\n  if (meals.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MealItem, {\n      meals: meals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this);\n  } // const mealsList = data.map((meal) => (\n  //   <MealItem\n  //     key={meal.id}\n  //     id={meal.id}\n  //     name={meal.name}\n  //     description={meal.description}\n  //     price={meal.price}\n  //   />\n  // ));\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"Iiz9r13wHP3oUKY8Pc8nCUik7ZA=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/theo-/Desktop/section/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMealsHandler","mealsUrl","response","fetch","ok","Error","data","json","loadedMeals","key","push","id","title","name","description","price","err","message","content","length"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;;AAGA,QAAMQ,iBAAiB,GAAG,YAAY;AACpCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAEA,UAAME,QAAQ,GAAG,oFAAjB;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA5B;;AAEA,UAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACtBE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEL,IAAI,CAACG,GAAD,CAAJ,CAAUE,EADC;AAEfC,UAAAA,KAAK,EAAEN,IAAI,CAACG,GAAD,CAAJ,CAAUI,IAFF;AAGfC,UAAAA,WAAW,EAAER,IAAI,CAACG,GAAD,CAAJ,CAAUK,WAHR;AAIfC,UAAAA,KAAK,EAAET,IAAI,CAACG,GAAD,CAAJ,CAAUM;AAJF,SAAjB;AAMD;;AACDpB,MAAAA,QAAQ,CAACa,WAAD,CAAR;AAED,KArBD,CAqBE,OAAOQ,GAAP,EAAY;AACZjB,MAAAA,QAAQ,CAACiB,GAAG,CAACC,OAAL,CAAR;AACD;;AACDpB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAhCD;;AAkCAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIkB,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAIxB,KAAK,CAACyB,MAAN,GAAe,CAAnB,EAAsB;AACpBD,IAAAA,OAAO,gBAAG,QAAC,QAAD;AAAU,MAAA,KAAK,EAAExB;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAII,KAAJ,EAAW;AACToB,IAAAA,OAAO,gBAAG;AAAA,gBAAIpB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIF,SAAJ,EAAe;AACbsB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GAxD0B,CAyD3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAS,IAAA,SAAS,EAAE5B,OAAO,CAACI,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKwB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA1ED;;GAAMzB,c;;KAAAA,c;AA4EN,eAAeA,cAAf","sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n  const fetchMealsHandler = async () => {\n    setIsLoading(true);\n\n    setError(null);\n\n    const mealsUrl = 'https://react-http-7d180-default-rtdb.europe-west1.firebasedatabase.app/meals.json'\n\n    try {\n      const response = await fetch(mealsUrl)\n\n      if (!response.ok) {\n        throw new Error('Something went wrong.')\n      }\n\n      const data = await response.json()\n\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: data[key].id,\n          title: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        })\n      }\n      setMeals(loadedMeals);\n\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false)\n  }\n\n  useEffect(() => {\n    fetchMealsHandler()\n  }, [])\n\n  let content = <p>Found no movies.</p>;\n\n  if (meals.length > 0) {\n    content = <MealItem meals={meals} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n  // const mealsList = data.map((meal) => (\n  //   <MealItem\n  //     key={meal.id}\n  //     id={meal.id}\n  //     name={meal.name}\n  //     description={meal.description}\n  //     price={meal.price}\n  //   />\n  // ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{content}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}