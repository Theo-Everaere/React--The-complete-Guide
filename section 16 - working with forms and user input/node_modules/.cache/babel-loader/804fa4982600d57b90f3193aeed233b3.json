{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theo-\\\\Desktop\\\\section 16 - working with forms and user input\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useForm from \"../hooks/use-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: firstName,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    inputChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: firstNameResetHandler\n  } = useForm(value => value.trim() !== '');\n\n  const validateEmail = email => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  };\n\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    inputChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: emailResetHandler\n  } = useForm(emailValue => validateEmail(emailValue));\n  let formIsValid = false;\n\n  if (firstNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const fnameClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lnameClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!firstNameIsValid && !emailIsValid) {\n      return;\n    }\n\n    console.log(firstName);\n    console.log(emailValue);\n    firstNameResetHandler();\n    emailResetHandler();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: fnameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fname\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fname\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler,\n          value: firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lnameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lname\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: emailValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"b9YGJfWaNC6JDxgtl6DY5m/vuVM=\", false, function () {\n  return [useForm, useForm];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["C:/Users/theo-/Desktop/section 16 - working with forms and user input/src/components/BasicForm.js"],"names":["useForm","BasicForm","props","value","firstName","isValid","firstNameIsValid","hasError","firstNameHasError","inputChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","firstNameResetHandler","trim","validateEmail","email","String","toLowerCase","match","emailValue","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","emailResetHandler","formIsValid","fnameClasses","lnameClasses","emailClasses","formSubmissionHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import useForm from \"../hooks/use-form\";\n\nconst BasicForm = (props) => {\n\n  const {\n    value: firstName,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    inputChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: firstNameResetHandler\n  } = useForm(value => value.trim() !== '')\n\n\n  const validateEmail = (email) => {\n    return String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      );\n  };\n\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    inputChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: emailResetHandler\n  } = useForm(emailValue => validateEmail(emailValue))\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && emailIsValid) {\n    formIsValid = true\n  }\n\n  const fnameClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\"\n  const lnameClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\"\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\"\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault()\n\n    if (!firstNameIsValid && !emailIsValid) {\n      return;\n    }\n\n    console.log(firstName);\n    console.log(emailValue);\n\n    firstNameResetHandler()\n    emailResetHandler()\n  }\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='control-group'>\n        <div className={fnameClasses}>\n          <label htmlFor='fname'>First Name</label>\n          <input\n            type='text'\n            id='fname'\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n            value={firstName}\n          />\n          {firstNameHasError && <p className=\"error-text\">Name must not be empty</p>}\n        </div>\n\n        <div className={lnameClasses}>\n          <label htmlFor='lname'>Last Name</label>\n          <input\n            type='text'\n            id='lname'\n          />\n        </div>\n      </div>\n\n      <div className={emailClasses}>\n        <label htmlFor='email'>E-Mail Address</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={emailValue}\n        />\n        {emailHasError && <p className=\"error-text\">Please enter a valid email</p>}\n\n      </div>\n\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}