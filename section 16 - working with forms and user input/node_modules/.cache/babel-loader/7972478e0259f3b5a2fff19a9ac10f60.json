{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theo-\\\\Desktop\\\\section 16 - working with forms and user input\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useForm from \"../hooks/use-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: nameValue,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    inputChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: nameResetHandler\n  } = useForm(value => value.trim() !== '');\n\n  const validateEmail = email => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  };\n\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    inputChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: emailResetHandler\n  } = useForm(emailValue => validateEmail(emailValue));\n  let formIsValid = false;\n\n  if (nameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameClasses = nameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!nameIsValid && !emailIsValid) {\n      return;\n    }\n\n    console.log(nameValue);\n    console.log(emailValue);\n    nameResetHandler();\n    emailResetHandler();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: nameChangeHandler,\n          onBlur: nameBlurHandler,\n          value: nameValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: emailValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"BxnaJuduPpSo8ThSzhZW02Cx+oM=\", false, function () {\n  return [useForm, useForm];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["C:/Users/theo-/Desktop/section 16 - working with forms and user input/src/components/BasicForm.js"],"names":["useForm","BasicForm","props","value","nameValue","isValid","nameIsValid","hasError","nameHasError","inputChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","nameResetHandler","trim","validateEmail","email","String","toLowerCase","match","emailValue","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","emailResetHandler","formIsValid","nameClasses","emailClasses","formSubmissionHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import useForm from \"../hooks/use-form\";\n\nconst BasicForm = (props) => {\n\n  const {\n    value: nameValue,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    inputChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: nameResetHandler\n  } = useForm(value => value.trim() !== '')\n\n  const validateEmail = (email) => {\n    return String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      );\n  };\n\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    inputChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: emailResetHandler\n  } = useForm(emailValue => validateEmail(emailValue))\n\n  let formIsValid = false;\n\n  if (nameIsValid) {\n    formIsValid = true\n  }\n\n  const nameClasses = nameHasError ? \"form-control invalid\" : \"form-control\"\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\"\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault()\n\n    if (!nameIsValid && !emailIsValid) {\n      return;\n    }\n\n    console.log(nameValue);\n    console.log(emailValue);\n\n    nameResetHandler()\n    emailResetHandler()\n  }\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='control-group'>\n        <div className={nameClasses}>\n          <label htmlFor='name'>First Name</label>\n          <input\n            type='text'\n            id='name'\n            onChange={nameChangeHandler}\n            onBlur={nameBlurHandler}\n            value={nameValue}\n          />\n          {nameHasError && <p className=\"error-text\">Name must not be empty</p>}\n        </div>\n\n        <div className='form-control'>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' />\n        </div>\n      </div>\n\n      <div className={emailClasses}>\n        <label htmlFor='email'>E-Mail Address</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={emailValue}\n        />\n        {emailHasError && <p className=\"error-text\">Please enter a valid email</p>}\n\n      </div>\n\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}